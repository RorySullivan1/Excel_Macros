'This VBA code is used for MS Excel 2016
'Below is an autocreator for a Table of Contents onto any sheet
'Please view ReadMe before proceeding..

Option Explicit

Sub TableOfContents_Create()

Dim sht As Worksheet
Dim Content_sht As Worksheet
Dim myArray As Variant
Dim myAnswer As Variant
Dim x As Long, y As Long
Dim shtName1 As String, shtName2 As String
Dim ContentName As String
Dim ContentHeader As Range
Dim ContentRange As Range

'Inputs
  ContentName = "Contents"

'Optimize Code
  Application.DisplayAlerts = False
  Application.ScreenUpdating = False

'Already Existing Contents Sheet
  On Error Resume Next
    Worksheets("Contents").Activate
  On Error GoTo 0

  If ActiveSheet.Name = ContentName Then
    myAnswer = MsgBox("A worksheet named [" & ContentName & _
      "] has already been created, would you like to replace it?", vbYesNo)
    
    'Did user select No or Cancel?
      If myAnswer <> vbYes Then GoTo ExitSub
      
    'Delete old Contents Tab
      Worksheets(ContentName).Delete
  End If

'Create New Contents Sheet
  Worksheets.Add Before:=Worksheets(1)

'Set variable to Contents Sheet
  Set Content_sht = ActiveSheet
  Set ContentHeader = Content_sht.Range("b1:D1")

'Format Contents Sheet
  With Content_sht
    .Name = ContentName
    .Range("B1") = "Table of Contents"
    .Range("B1").Font.Bold = True
    .Range("B1:D1").MergeCells = False
    .Range("B1:D1").HorizontalAlignment = xlLeft
  End With

'Create Array list with sheet names (excluding Contents)
  ReDim myArray(1 To Worksheets.Count - 1)

  For Each sht In ActiveWorkbook.Worksheets
    If sht.Name <> ContentName Then
      myArray(x + 1) = sht.Name
      x = x + 1
    End If
  Next sht

'Create Table of Contents
  For x = LBound(myArray) To UBound(myArray)
    Set sht = Worksheets(myArray(x))
    sht.Activate
    With Content_sht
      .Hyperlinks.Add .Cells(x + 2, 3), "", _
      SubAddress:="'" & sht.Name & "'!A1", _
      TextToDisplay:=sht.Name
      .Cells(x + 2, 2).Value = x
    End With
  Next x
  
Content_sht.Activate
Content_sht.Columns(3).EntireColumn.AutoFit


  'Terminal Variables
  Set ContentRange = Content_sht.Range("B3:B" & x + 1)

  'Adjust Zoom and Remove Gridlines
    ActiveWindow.DisplayGridlines = False
    ActiveWindow.Zoom = 250
  
  'Fit/Hide Columns
    ContentHeader.Select
    ContentHeader.Columns.AutoFit
    Range(Selection.Offset(0, 2), Selection.End(xlToRight)).Select
    Selection.EntireColumn.Hidden = True
    Range(ContentRange.Offset(ContentRange.Rows.Count + 1, 0) _
    , Selection.End(xlDown)).Select
    Selection.EntireRow.Hidden = True
   
   'Final Formatting
    
        Columns("B").ColumnWidth = 3
        Columns("C").AutoFit
        If Columns("C").ColumnWidth < 18 Then
            Columns("D").ColumnWidth = Abs(21 - Columns("c").ColumnWidth)
        Else:
            Columns("D").ColumnWidth = 3
        End If
        Range("B1").Font.Size = 18
        Range("B1:D1").Borders(xlEdgeBottom).Weight = xlThin
        
    With Range("B3:B" & x + 1)
      .Borders(xlInsideHorizontal).Color = RGB(255, 255, 255)
      .Borders(xlInsideHorizontal).Weight = xlMedium
      .HorizontalAlignment = xlCenter
      .VerticalAlignment = xlCenter
      .Font.Color = RGB(255, 255, 255)
      .Interior.Color = RGB(91, 155, 213)
    End With

    
    
    With Range("A1").EntireColumn
        .ColumnWidth = 4
        .Interior.Color = vbBlack
        End With
        
    With Range("E1").EntireColumn
        .ColumnWidth = 4
        .Interior.Color = vbBlack
        End With
    
    ContentRange.Offset(ContentRange.Rows.Count + 1, 0).Select
    With Selection.EntireRow
        .Interior.Color = vbBlack
        .RowHeight = 2
    End With

    'Add RefreshButton
    Content_sht.Buttons.Add(30, 27, 50, 10).Select
        Content_sht.Shapes.Range(Array("Button 1")).Select
        Selection.OnAction = "TableOfContents_Refresh"
        Selection.Text = "Refresh"
    
    'Add DeveloperButton
        Content_sht.Buttons.Add(80, 27, 80, 10).Select
        Content_sht.Shapes.Range(Array("Button 2")).Select
        'Selection.OnAction = "TableOfContents_Refresh"
        Selection.Text = "Developer Mode"

ExitSub:
'Optimize Code
  Application.DisplayAlerts = True
  Application.ScreenUpdating = True

Range("A1").Select
  
End Sub

'This seciton is used by the embedded button above 'Refresh' _
and is excluding several procedures that involve creation of the TOC sheet.

Sub TableOfContents_Refresh()

Dim sht As Worksheet
Dim Content_sht As Worksheet
Dim myArray As Variant
Dim myAnswer As Variant
Dim x As Long, y As Long
Dim shtName1 As String, shtName2 As String
Dim ContentName As String
Dim ContentHeader As Range
Dim ContentRange As Range

'Inputs
  ContentName = "Contents"

'Optimize Code
  Application.DisplayAlerts = False
  Application.ScreenUpdating = False

'Already Existing Contents Sheet
  On Error Resume Next
    Worksheets("Contents").Activate
  On Error GoTo 0
      
    'Delete old Contents Tab
      Worksheets(ContentName).Delete

'Create New Contents Sheet
  Worksheets.Add Before:=Worksheets(1)

'Set variable to Contents Sheet
  Set Content_sht = ActiveSheet
  Set ContentHeader = Content_sht.Range("b1:D1")

'Format Contents Sheet
  With Content_sht
    .Name = ContentName
    .Range("B1") = "Table of Contents"
    .Range("B1").Font.Bold = True
    .Range("B1:D1").MergeCells = False
    .Range("B1:D1").HorizontalAlignment = xlLeft
  End With

'Create Array list with sheet names (excluding Contents)
  ReDim myArray(1 To Worksheets.Count - 1)

  For Each sht In ActiveWorkbook.Worksheets
    If sht.Name <> ContentName Then
      myArray(x + 1) = sht.Name
      x = x + 1
    End If
  Next sht

'Create Table of Contents
  For x = LBound(myArray) To UBound(myArray)
    Set sht = Worksheets(myArray(x))
    sht.Activate
    With Content_sht
      .Hyperlinks.Add .Cells(x + 2, 3), "", _
      SubAddress:="'" & sht.Name & "'!A1", _
      TextToDisplay:=sht.Name
      .Cells(x + 2, 2).Value = x
    End With
  Next x
  
Content_sht.Activate
Content_sht.Columns(3).EntireColumn.AutoFit


  'Terminal Variables
  Set ContentRange = Content_sht.Range("B3:B" & x + 1)

  'Adjust Zoom and Remove Gridlines
    ActiveWindow.DisplayGridlines = False
    ActiveWindow.Zoom = 250
  
  'Fit/Hide Columns
    ContentHeader.Select
    ContentHeader.Columns.AutoFit
    Range(Selection.Offset(0, 2), Selection.End(xlToRight)).Select
    Selection.EntireColumn.Hidden = True
    Range(ContentRange.Offset(ContentRange.Rows.Count + 2, 0) _
    , Selection.End(xlDown)).Select
    Selection.EntireRow.Hidden = True
   
   'Final Formatting
    
        Columns("B").ColumnWidth = 3
        Columns("C").AutoFit
        If Columns("C").ColumnWidth < 18 Then
            Columns("D").ColumnWidth = Abs(21 - Columns("c").ColumnWidth)
        Else:
            Columns("D").ColumnWidth = 3
        End If
        Range("B1").Font.Size = 18
        Range("B1:D1").Borders(xlEdgeBottom).Weight = xlThin

    With Range("B3:B" & x + 1)
      .Borders(xlInsideHorizontal).Color = RGB(255, 255, 255)
      .Borders(xlInsideHorizontal).Weight = xlMedium
      .HorizontalAlignment = xlCenter
      .VerticalAlignment = xlCenter
      .Font.Color = RGB(255, 255, 255)
      .Interior.Color = RGB(91, 155, 213)
    End With

    
    
    With Range("A1").EntireColumn
        .ColumnWidth = 4
        .Interior.Color = vbBlack
        End With
        
    With Range("E1").EntireColumn
        .ColumnWidth = 4
        .Interior.Color = vbBlack
        End With
    
    ContentRange.Offset(ContentRange.Rows.Count + 1, 0).Select
    With Selection.EntireRow
        .Interior.Color = vbBlack
        .RowHeight = 2
    End With

        'Add RefreshButton
            Content_sht.Buttons.Add(30, 27, 50, 10).Select
            Content_sht.Shapes.Range(Array("Button 1")).Select
            Selection.OnAction = "TableOfContents_Refresh"
            Selection.Text = "Refresh"
        
        'Add DeveloperButton
            Content_sht.Buttons.Add(80, 27, 80, 10).Select
            Content_sht.Shapes.Range(Array("Button 2")).Select
            'Selection.OnAction = "TableOfContents_Refresh"
            Selection.Text = "Developer Mode"

ExitSub:
'Optimize Code
  Application.DisplayAlerts = True
  Application.ScreenUpdating = True

Range("A1").Select

End Sub


'Author -> Rory Sullivan
'Last Updateed -> 8/15/2020